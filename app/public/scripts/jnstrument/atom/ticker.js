(function($, THREE, window, document, undefined) {	
	var ticker = function(){
		this.name;
/*/////////////////////////////////////////////////////////////////////////////
	Private Properties
/*/////////////////////////////////////////////////////////////////////////////
		var tickables = [];
		var stopped = true;
/*/////////////////////////////////////////////////////////////////////////////
	Private Methods
/*/////////////////////////////////////////////////////////////////////////////
/*/////////////////////////////////////////////////////////////////////////////
	Public Methods
/*/////////////////////////////////////////////////////////////////////////////
		this.triggerTick = function() {
			if(stopped) return;
			var now = Date.now();
			for(var i=0; i<tickables.length; i++) 
				if(tickables[i]) {
					if(typeof(tickables[i].tick) === "function") tickables[i].tick(now, this);
					else tickables[i](now, this);
				}
		}
///////////////////////////////////////////////////////////////////////////////
		this.startTick = function() {
			stopped = false;
		}		
///////////////////////////////////////////////////////////////////////////////
		this.stopTick = function() {
			stopped = true;	
		}
///////////////////////////////////////////////////////////////////////////////
		this.isStopped = function(){
			return stopped;
		}
///////////////////////////////////////////////////////////////////////////////
		this.addTick = function(tickable) {
			if(!tickable.instanceof(require("./tickable.js"))) throw("Only instances of tickable can be added to the ticker.");
			tickables.push(tickable);
			tickable.ticker = this;
		}
///////////////////////////////////////////////////////////////////////////////
		this.removeTick = function(tickable) {
			tickable.ticker=null;
			delete tickables[tickables.indexOf(tickable)];
		}
	}
///////////////////////////////////////////////////////////////////////////////
	module.exports = require("../Class.js").abstract(ticker);
})(jQuery, THREE, window, document)