(function($, THREE, window, document, undefined) {
	var FunctionElement = function(env, data){
/*/////////////////////////////////////////////////////////////////////////////
	Private Properties
/*/////////////////////////////////////////////////////////////////////////////
/*/////////////////////////////////////////////////////////////////////////////
	Public Properties
/*/////////////////////////////////////////////////////////////////////////////
		this.element;
		this.eventElement;
		this.events = [];
		this.eventCount = 0;
		this.id = data.id;
/*/////////////////////////////////////////////////////////////////////////////
	Private Methods
/*/////////////////////////////////////////////////////////////////////////////
/*/////////////////////////////////////////////////////////////////////////////
	Public Methods
/*/////////////////////////////////////////////////////////////////////////////
		this.update = function(now){
			var gap= env.width/(env.elements.length);
			this.element.position.x = gap*(env.elementIndexes[this.id]);

			for(var i =0; i<this.events.length; i++) {
				if(this.events[i]) this.events[i].update(now);
			}

			this.eventElement.position.y += 10;
		}
/*/////////////////////////////////////////////////////////////////////////////
	Constructor
/*/////////////////////////////////////////////////////////////////////////////
		var geometry = new THREE.Geometry();
		geometry.vertices.push(new THREE.Vector3(0, 0, 0));
		geometry.vertices.push(new THREE.Vector3(0, env.height, 0));

		var material = new THREE.LineBasicMaterial({
			color: 0xdddddd
		});

		this.element = new THREE.Line(geometry, material);
		this.eventElement = new THREE.Object3D();

		this.element.add(this.eventElement);
		env.scene.add(this.element);
	};

	module.exports = require("../pcaClass.js")(FunctionElement);
})(jQuery, THREE, window, document)