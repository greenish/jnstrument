(function($, THREE, window, document, undefined) {	
	var Environment = function(container){
/*/////////////////////////////////////////////////////////////////////////////
	Private Properties
/*/////////////////////////////////////////////////////////////////////////////
		container = $(container);
		var renderLoop;
		var renderers = {};
		var width = container.innerWidth();
		var height = container.innerHeight();
		var scene = new THREE.Scene();
		var camera = new THREE.OrthographicCamera( 0, width, 0, height, 1, 1000);
		var renderer = new THREE.WebGLRenderer();
/*/////////////////////////////////////////////////////////////////////////////
	Public Properties
/*/////////////////////////////////////////////////////////////////////////////
		this.renderer = renderer;
		this.scene = scene;
		this.camera = camera;
		this.height = height;
		this.width = width;
/*/////////////////////////////////////////////////////////////////////////////
	Private Methods
/*/////////////////////////////////////////////////////////////////////////////
		var render = function() {
			renderLoop = requestAnimationFrame(render);
			var now = Date.now();
			for(method in renderers) 
				renderers[method](now);
			renderer.render(scene, camera);
		}
/*/////////////////////////////////////////////////////////////////////////////
	Public Methods
/*/////////////////////////////////////////////////////////////////////////////
		this.start = function() {
			render();
		}		
///////////////////////////////////////////////////////////////////////////////
		this.stop = function() {
			cancelAnimationFrame(renderLoop);	
		}
///////////////////////////////////////////////////////////////////////////////
		this.addRenderer = function(name,renderer) {
			renderers[name]=renderer;
		}
///////////////////////////////////////////////////////////////////////////////
		this.removeRenderer = function(name) {
			delete renderers[name];
		}
/*/////////////////////////////////////////////////////////////////////////////
	Constructor
/*/////////////////////////////////////////////////////////////////////////////
		camera.position.z = 300;
		scene.add(camera);
		renderer.setSize(width, height); 
		container.append(renderer.domElement);
	}
///////////////////////////////////////////////////////////////////////////////
	module.exports = function(container){
		return new Environment(container);
	}	
})(jQuery, THREE, window, document)